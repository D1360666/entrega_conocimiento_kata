{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecnico\\\\Desktop\\\\Sofka\\\\React\\\\entrega_conocimiento_kata\\\\front\\\\src\\\\App.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useReducer, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  list: [],\n  item: {}\n};\nconst Store = /*#__PURE__*/createContext(initialState);\n\nconst Form = () => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      item\n    }\n  } = useContext(Store);\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      isCompleted: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      defaultValue: item.name,\n      onChange: event => {\n        setState({ ...state,\n          name: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this), item.id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this), !item.id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onEdit,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n\n  const List = () => {\n    _s();\n\n    const {\n      dispatch,\n      state\n    } = useContext(Store);\n    useEffect(() => {\n      fetch(HOST_API + \"/todos\").then(response => response.json()).then(list => {\n        dispatch({\n          type: \"update-list\",\n          list\n        });\n      });\n    }, [state.list.length, dispatch]);\n\n    const onDelete = id => {\n      fetch(HOST_API + \"/\" + id + \"/todo\", {\n        method: \"DELETE\"\n      }).then(list => {\n        dispatch({\n          type: \"delete-item\",\n          id\n        });\n      });\n    };\n\n    const onEdit = todo => {\n      dispatch({\n        type: \"edit-item\",\n        item,\n        todo\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"\\xBFEst\\xE1 completado?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: state.list.map(todo => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.isCompleted === true ? \"SI\" : \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onDelete(todo.id),\n                  children: \"Eliminar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onEdit(todo),\n                  children: \"Editar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(List, \"2XF7Xm8DKBMMXmfgMb1wTC1ORWY=\");\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"update-item\":\n        const listUpdateEdit = state.list.map(item => {\n          if (item.id === action.item.id) {\n            return action.item;\n          }\n\n          return item;\n        });\n        return { ...state,\n          list: listUpdateEdit,\n          item: {}\n        };\n\n      case \"delete-item\":\n        const listUpdate = state.filter(item => {\n          return item.id !== action.id;\n        });\n        return { ...state,\n          list: listUpdate\n        };\n\n      case \"update-list\":\n        return { ...state,\n          list: action.list\n        };\n\n      case \"edit-item\":\n        return { ...state,\n          item: action.item\n        };\n\n      case \"add-item\":\n        const newList = state.list;\n        newList.push(action.item);\n        return { ...state,\n          list: newList\n        };\n\n      default:\n        return state;\n    }\n  }\n\n  ;\n\n  const StoreProvider = _ref => {\n    _s2();\n\n    let {\n      children\n    } = _ref;\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return /*#__PURE__*/_jsxDEV(Store.Provider, {\n      value: {\n        state,\n        dispatch\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s2(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n  function App() {\n    return /*#__PURE__*/_jsxDEV(StoreProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 10\n    }, this);\n  }\n\n  ;\n};\n\n_s3(Form, \"0Oq3SAYZMG8y4XLh2fMjf7LatRo=\");\n\n_c = Form;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/tecnico/Desktop/Sofka/React/entrega_conocimiento_kata/front/src/App.js"],"names":["React","createContext","useContext","useEffect","useReducer","useRef","useState","HOST_API","initialState","list","item","Store","Form","formRef","dispatch","state","setState","onAdd","event","preventDefault","request","name","id","isCompleted","fetch","method","body","JSON","stringify","headers","then","response","json","todo","type","current","reset","onEdit","target","value","List","length","onDelete","map","reducer","action","listUpdateEdit","listUpdate","filter","newList","push","StoreProvider","children","App"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useEffect, useReducer, useRef, useState } from \"react\";\n\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  list: [],\n  item:{}  \n};\nconst Store = createContext(initialState);\n\nconst Form = () => {\n  const formRef = useRef(null);\n  const { dispatch, state: {item} } = useContext(Store);\n  const [state, setState] = useState(item);\n  \n  const onAdd=(event) =>{\n    event.preventDefault();\n\n    const request = {\n      name: state.name,\n      id:null,\n      isCompleted: false\n    };  \n\n    fetch(HOST_API+\"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then((todo) => {\n      dispatch({ type: \"add-item\", item: todo });\n      setState({name: \"\"});\n      formRef.current.reset();\n    });\n  }\n  \n  const onEdit=(event) =>{\n    event.preventDefault();\n\n    const request = {\n      name: state.name,\n      id:item.id,\n      isCompleted: item.isCompleted\n    };  \n\n    fetch(HOST_API+\"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then((todo) => {\n      dispatch({ type: \"update-item\", item: todo });\n      setState({name: \"\"});\n      formRef.current.reset();\n    });\n  }\n\n  return <form ref={formRef}>\n  <input\n    type=\"text\"\n    name=\"name\"\n    defaultValue={item.name}\n    onChange={(event) => {\n      setState({ ...state, name: event.target.value });\n    }}\n  ></input>\n  {item.id && <button onClick={onAdd}>Agregar</button>}\n  {!item.id && <button onClick={onEdit}>Actualizar</button>}\n\n</form>\n\n\n\n\nconst List = () => {\n  const { dispatch, state } = useContext(Store);\n\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\")\n      .then((response) => response.json())\n      .then((list) => {\n        dispatch({ type: \"update-list\", list });\n      });\n  }, [state.list.length, dispatch]);\n\n  const onDelete = (id) =>{\n    fetch(HOST_API + \"/\"+id+\"/todo\", {\n      method: \"DELETE\"\n    })\n    .then((list)=>{\n      dispatch({type: \"delete-item\", id})\n    })\n  };\n\n  const onEdit = (todo) => {\n    dispatch({ type: \"edit-item\", item, todo })\n  };\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Nombre</td>\n            <td>¿Está completado?</td>\n          </tr>\n        </thead>\n        <tbody>\n          {state.list.map((todo) => {\n            return (\n              <tr key={todo.id}>\n                <td>{todo.id}</td>\n                <td>{todo.name}</td>\n                <td>{todo.isCompleted === true ? \"SI\" : \"NO\"}</td>\n                <td><button onClick={() => onDelete(todo.id)}>Eliminar</button></td>\n                <td><button onClick={() => onEdit(todo)}>Editar</button></td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"update-item\":\n      const listUpdateEdit = state.list.map((item) => {\n        if(item.id === action.item.id){\n          return action.item;          \n        }\n\n        return item\n      });\n      return {...state, list: listUpdateEdit, item:{}}\n    case \"delete-item\":\n      const listUpdate = state.filter((item) =>{\n        return item.id !== action.id;\n      });\n      return{...state, list: listUpdate}\n    case \"update-list\":\n      return { ...state, list: action.list };\n    case \"edit-item\":\n      return { ...state, item: action.item };\n    case \"add-item\":\n      const newList = state.list;\n      newList.push(action.item);\n      return { ...state, list: newList };\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Store.Provider value={{ state, dispatch }}>\n      {children}\n    </Store.Provider>\n  );\n};\n\nfunction App() {\n  return <StoreProvider>\n    <Form />\n    <List />\n  </StoreProvider>;\n};\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}