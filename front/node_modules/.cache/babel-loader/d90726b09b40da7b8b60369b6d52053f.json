{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecnico\\\\Desktop\\\\Sofka\\\\React\\\\entrega_conocimiento_kata\\\\front\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useReducer, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  list: []\n};\nconst Store = /*#__PURE__*/createContext(initialState);\n\nconst Form = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const {\n    dispatch\n  } = useContext(Store);\n  const [state, setState] = useState({});\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      description: state.description,\n      id: null,\n      isCompleted: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\",\n        description: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: event => {\n        setState({ ...state,\n          name: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"93mOPJUcpmWOaPuJNgePXVSaxzo=\");\n\n_c = Form;\n\nconst List = () => {\n  _s2();\n\n  const {\n    dispatch,\n    state\n  } = useContext(Store);\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\").then(response => Response.json()).then(list => {\n      dispatch({\n        type: \"update-list\",\n        list\n      });\n    });\n  }, [state.list.length, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\xBFEst\\xE1 completado?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.list.map(todo => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.isComplete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(List, \"2XF7Xm8DKBMMXmfgMb1wTC1ORWY=\");\n\n_c2 = List;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"update-list\":\n      return { ...state,\n        liste: action.list\n      };\n\n    case \"add-item\":\n      const newList = state.list;\n      newList.push(action.item);\n      return { ...state,\n        list: newList\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst StoreProvider = _ref => {\n  _s3();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c3 = StoreProvider;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(StoreProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"StoreProvider\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/tecnico/Desktop/Sofka/React/entrega_conocimiento_kata/front/src/App.js"],"names":["React","createContext","useContext","useEffect","useReducer","useRef","useState","HOST_API","initialState","list","Store","Form","formRef","dispatch","state","setState","onAdd","event","preventDefault","request","name","description","id","isCompleted","fetch","method","body","JSON","stringify","headers","then","response","json","todo","type","item","current","reset","target","value","List","Response","length","map","isComplete","reducer","action","liste","newList","push","StoreProvider","children","App"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useEffect, useReducer, useRef, useState } from \"react\";\n\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  list: [],\n};\nconst Store = createContext(initialState);\n\nconst Form = () => {\n  const formRef = useRef(null);\n  const { dispatch } = useContext(Store);\n  const [state, setState] = useState({});\n  \n  const onAdd=(event) =>{\n    event.preventDefault();\n\n    const request = {\n      name: state.name,\n      description: state.description,\n      id:null,\n      isCompleted: false\n    };\n    fetch(HOST_API+\"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response => response.json())\n    .then((todo) => {\n      dispatch({ type: \"add-item\", item: todo });\n      setState({name: \"\", description:\"\"});\n      formRef.current.reset();\n    });\n  }\n\n  return (\n    <form ref={formRef}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        onChange={(event) => {\n          setState({ ...state, name: event.target.value });\n        }}\n      ></input>\n      <button onClick={onAdd}>Agregar</button>\n    </form>\n  );\n};\n\nconst List = () => {\n  const { dispatch, state } = useContext(Store);\n\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\")\n      .then((response) => Response.json())\n      .then((list) => {\n        dispatch({ type: \"update-list\", list });\n      });\n  }, [state.list.length, dispatch]);\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Nombre</td>\n            <td>¿Está completado?</td>\n          </tr>\n        </thead>\n        <tbody>\n          {state.list.map((todo) => {\n            return (\n              <tr key={todo.id}>\n                <td>{todo.id}</td>\n                <td>{todo.name}</td>\n                <td>{todo.isComplete}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"update-list\":\n      return { ...state, liste: action.list };\n    case \"add-item\":\n      const newList = state.list;\n      newList.push(action.item);\n      return { ...state, list: newList };\n    default:\n      return state;\n  }\n}\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Store.Provider value={{ state, dispatch }}>\n      {children}\n    </Store.Provider>\n  );\n};\n\nfunction App() {\n  return <StoreProvider>\n    <Form />\n    <List />\n  </StoreProvider>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}