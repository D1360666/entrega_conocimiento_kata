{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecnico\\\\Desktop\\\\Sofka\\\\React\\\\entrega_conocimiento_kata\\\\front\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useReducer, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  list: [],\n  item: {}\n};\nconst Store = /*#__PURE__*/createContext(initialState);\n\nconst Form = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      item\n    }\n  } = useContext(Store);\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      isCompleted: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      defaultValue: item.name,\n      onChange: event => {\n        setState({ ...state,\n          name: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this), item.id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, this), !item.id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onEdit,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Form, \"0Oq3SAYZMG8y4XLh2fMjf7LatRo=\");\n\n_c = Form;\n\nconst List = () => {\n  _s2();\n\n  const {\n    dispatch,\n    state\n  } = useContext(Store);\n  const currenList = todo.list;\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\").then(response => response.json()).then(list => {\n      dispatch({\n        type: \"update-list\",\n        list\n      });\n    });\n  }, [dispatch]);\n\n  const onDelete = id => {\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\n      method: \"DELETE\"\n    }).then(list => {\n      dispatch({\n        type: \"delete-item\",\n        id\n      });\n    });\n  };\n\n  const onEdit = todo => {\n    dispatch({\n      type: \"edit-item\",\n      item: todo\n    });\n  };\n\n  const onChange = (event, todo) => {\n    const request = {\n      name: todo.name,\n      id: todo.id,\n      completed: event.target.checked\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\xBFEst\\xE1 completado?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.list.map(todo => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.isCompleted === true ? \"SI\" : \"NO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onDelete(todo.id),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onEdit(todo),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(List, \"2XF7Xm8DKBMMXmfgMb1wTC1ORWY=\");\n\n_c2 = List;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"update-item\":\n      const listUpdateEdit = state.list.map(item => {\n        if (item.id === action.item.id) {\n          return action.item;\n        }\n\n        return item;\n      });\n      return { ...state,\n        list: listUpdateEdit,\n        item: {}\n      };\n\n    case \"delete-item\":\n      const listUpdate = state.filter(item => {\n        return item.id !== action.id;\n      });\n      return { ...state,\n        list: listUpdate\n      };\n\n    case \"update-list\":\n      return { ...state,\n        list: action.list\n      };\n\n    case \"edit-item\":\n      return { ...state,\n        item: action.item\n      };\n\n    case \"add-item\":\n      const newList = state.list;\n      newList.push(action.item);\n      return { ...state,\n        list: newList\n      };\n\n    default:\n      return state;\n  }\n}\n\n;\n\nconst StoreProvider = _ref => {\n  _s3();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c3 = StoreProvider;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(StoreProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = App;\n;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"StoreProvider\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/tecnico/Desktop/Sofka/React/entrega_conocimiento_kata/front/src/App.js"],"names":["React","createContext","useContext","useEffect","useReducer","useRef","useState","HOST_API","initialState","list","item","Store","Form","formRef","dispatch","state","setState","onAdd","event","preventDefault","request","name","id","isCompleted","fetch","method","body","JSON","stringify","headers","then","response","json","todo","type","current","reset","onEdit","target","value","List","currenList","onDelete","onChange","completed","checked","map","reducer","action","listUpdateEdit","listUpdate","filter","newList","push","StoreProvider","children","App"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useEffect, useReducer, useRef, useState } from \"react\";\n\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  list: [],\n  item:{}  \n};\nconst Store = createContext(initialState);\n\nconst Form = () => {\n  const formRef = useRef(null);\n  const { dispatch, state: {item} } = useContext(Store);\n  const [state, setState] = useState(item);\n  \n  const onAdd=(event) =>{\n    event.preventDefault();\n\n    const request = {\n      name: state.name,\n      id:null,\n      isCompleted: false\n    };  \n\n    fetch(HOST_API+\"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then((todo) => {\n        dispatch({ type: \"add-item\", item: todo });\n        setState({name: \"\"});\n        formRef.current.reset();\n      });\n  }\n  \n  const onEdit=(event) =>{\n    event.preventDefault();\n\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };  \n\n    fetch(HOST_API+\"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then((todo) => {\n        dispatch({ type: \"update-item\", item: todo });\n        setState({name: \"\"});\n        formRef.current.reset();\n      });\n    }\n\n  return <form ref={formRef}>\n  <input\n    type=\"text\"\n    name=\"name\"\n    defaultValue={item.name}\n    onChange={(event) => {\n      setState({ ...state, name: event.target.value })\n    }} ></input>\n  {item.id && <button onClick={onAdd}>Agregar</button>}\n  {!item.id && <button onClick={onEdit}>Actualizar</button>}\n</form>\n}\n\n\n\nconst List = () => {\n  const { dispatch, state } = useContext(Store);\n  const currenList = todo.list;\n\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\")\n      .then(response => response.json())\n      .then((list) => {\n        dispatch({ type: \"update-list\", list });\n      });\n  }, [dispatch]);\n\n  const onDelete = (id) => {\n    fetch(HOST_API + \"/\"+id+\"/todo\", {\n      method: \"DELETE\"\n    }).then((list)=>{\n      dispatch({type: \"delete-item\", id})\n    })\n  };\n\n  const onEdit = (todo) => {\n    dispatch({ type: \"edit-item\", item: todo })\n  };\n\n  const onChange = (event, todo) => {\n    const request = {\n      name: todo.name,\n      id: todo.id,\n      completed: event.target.checked\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then((todo) => {\n        dispatch({ type: \"update-item\", item: todo });\n      });\n  };\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Nombre</td>\n            <td>¿Está completado?</td>\n          </tr>\n        </thead>\n        <tbody>\n          {state.list.map((todo) => {\n            return (\n              <tr key={todo.id}>\n                <td>{todo.id}</td>\n                <td>{todo.name}</td>\n                <td>{todo.isCompleted === true ? \"SI\" : \"NO\"}</td>\n                <td><button onClick={() => onDelete(todo.id)}>Eliminar</button></td>\n                <td><button onClick={() => onEdit(todo)}>Editar</button></td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"update-item\":\n      const listUpdateEdit = state.list.map((item) => {\n        if(item.id === action.item.id){\n          return action.item;          \n        }\n\n        return item\n      });\n      return {...state, list: listUpdateEdit, item:{}}\n    case \"delete-item\":\n      const listUpdate = state.filter((item) =>{\n        return item.id !== action.id;\n      });\n      return{...state, list: listUpdate}\n    case \"update-list\":\n      return { ...state, list: action.list };\n    case \"edit-item\":\n      return { ...state, item: action.item };\n    case \"add-item\":\n      const newList = state.list;\n      newList.push(action.item);\n      return { ...state, list: newList };\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Store.Provider value={{ state, dispatch }}>\n      {children}\n    </Store.Provider>\n  );\n};\n\nfunction App() {\n  return <StoreProvider>\n    <Form />\n    <List />\n  </StoreProvider>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}